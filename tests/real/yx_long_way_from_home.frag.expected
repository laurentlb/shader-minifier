// Generated with  (https://github.com/laurentlb/Shader_Minifier/)
#ifndef YX_LONG_WAY_FROM_HOME_FRAG_EXPECTED_
# define YX_LONG_WAY_FROM_HOME_FRAG_EXPECTED_
# define VAR_iChannel1 "v"

const char *yx_long_way_from_home_frag =
 "#version 130\n"
 "#define iResolution gl_TexCoord[0]\n"
 "#define iTime gl_TexCoord[0].z\n"
 "#define pi acos(-1.)\n"
 "#define BOKEH 1\n"
 "#define SHADING 1\n"
 "uniform sampler2D v;"
 "mat2 n(float v)"
 "{"
   "float x=cos(v);"
   "v=sin(v);"
   "return mat2(x,-v,v,x);"
 "}"
 "vec2 s(const float v)"
 "{"
   "return fract(sin(vec2(v,v+1.))*vec2(43758.5453123));"
 "}"
 "int f;"
 "float e(vec2 v)"
 "{"
   "vec2 x=vec2(.125,0);"
   "return length((v-clamp(v,-x,x)).xy);"
 "}"
 "float p(vec2 v)"
 "{"
   "return smoothstep(.5,1.,cos(v.x*10.))*1.5+sin(v.x*1e2)*.5+.5;"
 "}"
 "float t(vec3 i)"
 "{"
   "float x=min(1e9,length(i-vec3(0,5,0))-2.5);"
   "vec3 c=i;"
   "c.x=abs(c.x-1.1)-.2;"
   "float s=max(length(c.xz+vec2(0,5))-.01,c.y-5.);"
   "c=i;"
   "if(i.y<.3)"
     "{"
       "i.y+=texture(v,i.xz*.125).x*9e-4;"
       "i.y+=texture(v,i.xz*2.*.125).x*.0011;"
       "i.y+=texture(v,i.xz*4.*.125).x*.0021;"
       "i.y+=texture(v,i.xz*4.*.0625).x*.0051;"
       "i.y+=texture(v,i.xz*4.*.03125).x*.01;"
       "i.y+=sin(i.x*2.)*.05;"
       "i.y-=length(sin(i.xz*.5))*.1;"
       "i.z+=sin(i.x*.5)*.5;"
       "i.z+=step(.5,mod(i.x,1.))*.3-.15;"
       "i.x=mod(i.x,.5)-.25;"
       "float x=e(i.xz),y=smoothstep(.1,.13,x);"
       "i.y+=.1-y*.03;"
       "i.y-=smoothstep(.05,0.,abs(x-.16))*.004;"
       "i.y-=(1.-y)*.01*p(i.xz);"
     "}"
   "i.y-=smoothstep(2.,0.,length(c.xz+vec2(-1.5,3.5)))*.2;"
   "i.y-=smoothstep(2.,0.,length(c.xz+vec2(1,-2)))*.2;"
   "float y=i.y;"
   "x=min(x,y);"
   "i.y-=.25;"
   "f=s<x?"
     "1:"
     "0;"
   "x=min(x,s);"
   "return x*.9;"
 "}"
 "vec2 i;"
 "vec3 h(vec3 v)"
 "{"
   "return cross(vec3(-1),v);"
 "}"
 "vec3 m(vec3 v)"
 "{"
   "float x=1.;"
   "v=normalize(v);"
   "vec3 y=normalize(h(v)),z=normalize(cross(v,y));"
   "vec2 c=i;"
   "c.x=c.x*2.*pi;"
   "c.y=pow(c.y,1./(x+1.));"
   "x=sqrt(1.-c.y*c.y);"
   "return cos(c.x)*x*y+sin(c.x)*x*z+c.y*v;"
 "}"
 "bool e(vec3 v,vec3 x,out vec3 y,out vec3 i,out float c)"
 "{"
   "float f=0.;"
   "for(int i=0;i<100;++i)"
     "{"
       "c=t(v+x*f);"
       "f+=c;"
       "if(abs(c)<.004)"
         "break;"
     "}"
   "y=v+x*f;"
   "if(abs(c)<.004)"
     "{"
       "vec2 v=vec2(.001,0);"
       "c=t(y);"
       "i=normalize(vec3(t(y+v.xyy)-c,t(y+v.yxy)-c,t(y+v.yyx)-c));"
       "return true;"
     "}"
   "return false;"
 "}"
 "vec3 c(vec3 v)"
 "{"
   "float x=1e-4;"
   "v=normalize(v);"
   "vec3 y=normalize(h(v)),z=normalize(cross(v,y));"
   "vec2 c=i;"
   "c.x=c.x*2.*pi;"
   "c.y=1.-c.y*x;"
   "x=sqrt(1.-c.y*c.y);"
   "return cos(c.x)*x*y+sin(c.x)*x*z+c.y*v;"
 "}"
 "vec3 c(vec3 v,vec3 x)"
 "{"
   "vec3 y=normalize(vec3(.3,.36,-1));"
   "const vec3 p=vec3(1,.6,.2)*2.;"
   "vec3 n=vec3(1),z=vec3(0);"
   "for(int r=0;r<10;++r)"
     "{"
       "vec3 t,l;"
       "float a;"
       "if(e(v,x,t,l,a))"
         "{"
           "float r=1.;"
           "vec3 a=vec3(1);"
           "if(f==1)"
             "a=vec3(.7);"
           "r*=r;"
           "{"
             "v=t+l*.002;"
             "vec3 h=reflect(x,l),o=m(l);"
             "x=normalize(mix(h,o,r));"
             "n*=a;"
           "}"
           "a=c(y);"
           "r=dot(l,a);"
           "vec3 o,k;"
           "float g;"
           "if(r>0.&&!e(t+l*.002,a,o,k,g))"
             "z+=n*r*p;"
           "i=s(i.y);"
         "}"
       "else if(abs(a)>.1)"
         "return z+vec3(1,2,3)*.2*n;"
       "else"
         " break;"
     "}"
   "return vec3(0);"
 "}"
 "vec2 c()"
 "{"
   "vec2 v=i;"
   "if(v.y>v.x)"
     "v=1.-v;"
   "v.y*=pi*2./v.x;"
   "return v.x*vec2(cos(v.y),sin(v.y));"
 "}"
 "void main()"
 "{"
   "vec2 v=gl_FragCoord.xy/iResolution.xy-.5;"
   "float x=iTime+(v.x+iResolution.x*v.y)*1.51269341231;"
   "i=s(x);"
   "v+=(i-.5)/iResolution.xy;"
   "v.x*=iResolution.x/iResolution.y;"
   "const vec3 y=vec3(-4,2,3),a=vec3(0);"
   "const vec2 z=vec2(1,2)*.015;"
   "vec3 f=vec3(0),r=normalize(vec3(v,2));"
   "v=c();"
   "f.xy+=v*z;"
   "r.xy-=v*z*r.z/length(y-a);"
   "vec3 l=a-y;"
   "x=-atan(l.y,length(l.xz));"
   "float h=-atan(l.x,l.z);"
   "f.yz*=n(x);"
   "r.yz*=n(x);"
   "f.xz*=n(h);"
   "r.xz*=n(h);"
   "f+=y;"
   "vec4 t=vec4(c(f,r),1);"
   "gl_FragColor=!isnan(t.x)&&t.x>=0.?"
     "t:"
     "vec4(0);"
 "}";

#endif // YX_LONG_WAY_FROM_HOME_FRAG_EXPECTED_
