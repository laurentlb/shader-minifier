#define R iResolution

#define T iTime

#define M iMouse

#define PI2 6.28318530718

#define PI 3.14159265358

#define MINDIST .0001

#define MAXDIST 125.

#define r2(a)mat2(cos(a),sin(a),-sin(a),cos(a))

float pMod(inout float p,float size)
{
  float c=floor((p+size*.5)/size);
  p=mod(p+size*.5,size)-size*.5;
  return c;
}
vec2 pMod(inout vec2 p,float size)
{
  vec2 c=floor((p+size*.5)/size);
  p=mod(p+size*.5,size)-size*.5;
  return c;
}
vec3 pMod(inout vec3 p,float size)
{
  vec3 c=floor((p+size*.5)/size);
  p=mod(p+size*.5,size)-size*.5;
  return c;
}
float pModPolar(inout vec2 p,float repetitions)
{
  float angle=2.*PI/repetitions,a=atan(p.y,p.x)+angle/2.,r=length(p),c=floor(a/angle);
  a=mod(a,angle)-angle/2.;
  p=vec2(cos(a),sin(a))*r;
  if(abs(c)>=repetitions/2.)
    c=abs(c);
  return c;
}
float vmax(vec2 v)
{
  return max(v.x,v.y);
}
float vmax(vec3 v)
{
  return max(max(v.x,v.y),v.z);
}
float fBox(vec3 p,vec3 b)
{
  p=abs(p)-b;
  return length(max(p,vec3(0)))+vmax(min(p,vec3(0)));
}
float fBox2(vec2 p,vec2 b)
{
  p=abs(p)-b;
  return length(max(p,vec2(0)))+vmax(min(p,vec2(0)));
}
float sdCap(vec3 p)
{
  p.y-=clamp(p.y,0.,1.16);
  return length(p)-.015;
}
vec2 path(float z)
{
  return(vec2(2.35*sin(z*.125)+2.38*cos(z*.25),3.5*cos(z*.0945))-vec2(3.2*sin(z*.19),4.31*sin(z*.125)-2.38*cos(z*.115)))*.3;
}
float time,tm,travelSpeed,glow,iqd,flight,beams,gcolor,objglow,offWobble,boxsize,ga,sa,slp;
vec3 g_hp,s_hp;
mat2 r4,r5;
const vec3 cxz=vec3(3.15,4.75,3);
vec2 fragtail(vec3 pos)
{
  float ss=1.15,r=1e5;
  for(int i=0;i<2;i++)
    {
      pos=abs(pos);
      if(pos.x-pos.y<0.)
        pos.yx=pos.xy;
      if(pos.x-pos.z<0.)
        pos.zx=pos.xz;
      if(pos.y-pos.z<0.)
        pos.zy=pos.yz;
      pos.x=3.*pos.x-cxz.x*2.;
      pos.y=3.*pos.y-cxz.y*2.;
      pos.z=3.*pos.z;
      if(pos.z>.5*cxz.z*2.)
        pos.z-=cxz.z*2.;
      r=fBox2(pos.xy,vec2(5,1.5+.25*sin(pos.x*5.)))-.0015;
      ss*=1./3.;
    }
  return vec2(r*ss,1);
}
vec2 edge(vec2 p)
{
  vec2 p2=abs(p);
  return p2.x>p2.y?
    vec2(p.x<0.?
      -1.:
      1.,0):
    vec2(0,p.y<0.?
      -1.:
      1.);
}
vec2 map(vec3 p,float sg)
{
  vec2 res=vec2(100,-1),tun=p.xy-path(p.z);
  vec3 q=vec3(tun,p.z),o=vec3(tun+vec2(0),p.z+travelSpeed+4.25),s=q;
  o.zx*=r5;
  o.yz*=r4;
  o=abs(o)-offWobble*.25;
  float obj=fBox(o,vec3(.15*offWobble))-.015;
  if(obj<res.x)
    res=vec2(obj,11),g_hp=o;
  float pid=floor((q.z+3.625)/7.25),trackmod=mod(pid,18.);
  pid=trackmod<12.?
    trackmod<6.?
      4.:
      6.:
    10.;
  pModPolar(q.xy,pid);
  pModPolar(s.xy,pid*.5);
  o=s;
  vec3 fs=s-vec3(2.85,0,0);
  o=vec3(abs(o.x),abs(o.y),o.z);
  fs.z*=2.;
  tun=floor(fs.xz)+.5;
  vec2 neighbour=tun+edge(fs.xz-tun);
  pid=floor(tun.y);
  trackmod=smoothstep(.001,1.,texture(iChannel0,vec2(mod(pid,16.)*.0465,.1)).x);
  ga=trackmod;
  float ids=pMod(s.z,7.25);
  vec3 qid=pMod(q,7.25);
  ids=mod(ids,2.);
  iqd=qid.x;
  pid=mod(pid,tm<8.?
    tm<4.?
      tm<4.?
        2.:
        2.:
      5.:
    floor(trackmod*1.45));
  float d4a=length(o.xy-vec2(2.5,1.75))-.1,d4=length(o.xy-vec2(2.5,1.75))-.04+.027+.027*sin(o.z-time*4.5);
  if(d4<res.x)
    res=vec2(d4,12),g_hp=p;
  vec2 d1=fragtail(q);
  d1.x=max(d1.x,-d4a);
  s.z=abs(s.z);
  d4a=sdCap(s-vec3(2.45,-.58,2.725));
  if(ids<2.)
    d1.x=min(d4a,d1.x);
  if(d1.x<res.x)
    res=d1.xy,g_hp=p;
  float me=fBox(fs-vec3(0,0,tun.y),vec3(.05,.15+trackmod,.25)),next=fBox(fs-vec3(0,0,neighbour.y),vec3(.05,.001+trackmod,.25));
  trackmod=min(me,next);
  if(trackmod<res.x)
    res=vec2(trackmod,4),g_hp=p;
  if(sg==1.)
    beams+=1e-4/(3e-6+d4*d4);
  if(sg==1.&&ids<1.)
    flight+=.00025/(1e-7+d4a*d4a);
  if(sg==1.&&pid<.1)
    glow+=.00015/(2e-6+trackmod*trackmod);
  if(sg==1.&&tm<13.25)
    objglow+=5e-4/(5e-4+obj*obj);
  return res;
}
vec2 marcher(vec3 ro,vec3 rd)
{
  float d=0.,m=-1.;
  for(int i=0;i<164;i++)
    {
      vec3 p=ro+rd*d;
      vec2 t=map(p,1.);
      if(abs(t.x)<d*MINDIST||d>MAXDIST)
        break;
      d+=i<42?
        t.x*.35:
        t.x;
      m=t.y;
    }
  return vec2(d,m);
}
vec3 normal(vec3 p,float t)
{
  t*=MINDIST;
  vec2 h=vec2(1,-1)*.5773;
  return normalize(h.xyy*map(p+h.xyy*t,0.).x+h.yyx*map(p+h.yyx*t,0.).x+h.yxy*map(p+h.yxy*t,0.).x+h.xxx*map(p+h.xxx*t,0.).x);
}
vec3 hsv2rgb(vec3 c)
{
  return c.z*mix(vec3(1),clamp(abs(mod(c.x*6.+vec3(0,4,2),6.)-3.)-1.,0.,1.),c.y);
}
void mainImage(out vec4 O,vec2 F)
{
  time=iTime;
  tm=mod(time*.3,18.);
  travelSpeed=time*5.;
  offWobble=1.5+1.15*sin(tm+time*.1);
  r4=r2(time);
  r5=r2(time);
  vec2 uv=(F.xy-R.xy*.5)/max(R.x,R.y);
  vec3 C=vec3(0),FC=vec3(.03);
  float crop=clamp(-.05+T*.05,0.,.18);
  if(uv.y<crop&&uv.y>-crop)
    {
      vec3 lp=vec3(0,0,-travelSpeed),ro=vec3(0,0,.15);
      float x=M.xy==vec2(0)||M.z<0.?
        0.:
        (M.y/R.y-.5)*PI,y=M.xy==vec2(0)||M.z<0.?
        0.:
        (-M.x/R.x*2.+1.)*PI;
      ro.zy*=r2(x);
      ro+=lp;
      lp.xy+=path(lp.z);
      ro.xy+=path(ro.z);
      vec3 f=normalize(lp-ro),r=normalize(cross(vec3(0,1,0),f)),c=ro+f*.183;
      f=c+uv.x*r+uv.y*normalize(cross(f,r))-ro;
      f.xy=r2(.2*sin(time*.3)-path(lp.z).x/24.)*f.xy;
      f.xz=r2(y-path(lp.z+1.).y/14.)*f.xz;
      vec2 t=marcher(ro,f);
      x=t.x;
      y=t.y;
      s_hp=g_hp;
      if(x<MAXDIST)
        {
          vec3 p=ro+f*x,n=normal(p,x);
          p=vec3(0,0,.25)-p+lp;
          p.xy+=path(p.z);
          p=normalize(p);
          float diff=clamp(dot(n,p),.01,1.),spec=pow(max(dot(reflect(p,n),f),.01),24.);
          p=y==11.?
            vec3(.005):
            vec3(1);
          if(y==3.||y==4.)
            p=vec3(.012);
          if(tm>13.25)
            C=p*diff+spec;
          else if(y==3.||y==4.)
            C=hsv2rgb(vec3(s_hp.z*.01,.8,.6))*diff;
        }
      if(tm>13.25)
        {
          if(mod(T,.1)<.05)
            FC=vec3(.8);
        }
      else
         C=C+abs(glow*.7)*hsv2rgb(vec3(s_hp.z*.01,.8,.6))+abs(objglow*.65)*vec3(1);
      C=mix(C,FC,1.-exp(-7.5e-5*t.x*t.x*t.x))+abs(beams*.65)*hsv2rgb(vec3(s_hp.z*.025,.8,.6))+abs(flight*.75)*vec3(.5,1,.2);
    }
  crop=1./R.x;
  float d1=fBox2(uv+vec2(-.485,.2675),vec2(.005))-.002;
  d1=smoothstep(crop,-crop,d1);
  C=mix(C,vec3(.212,.671,.576),d1);
  d1=fBox2(uv+vec2(-.465,.2675),vec2(.005))-.002;
  d1=smoothstep(crop,-crop,d1);
  C=mix(C,vec3(.757,.686,.341),d1);
  d1=fBox2(uv+vec2(-.445,.2675),vec2(.005))-.002;
  d1=smoothstep(crop,-crop,d1);
  C=pow(mix(C,vec3(.882,.459,.867),d1),vec3(.4545));
  O=vec4(C,1);
}
